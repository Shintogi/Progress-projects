import customtkinter 
from cryptography.fernet import Fernet

customtkinter.set_appearance_mode("system")
customtkinter.set_default_color_theme("green")

#Basic grpahic interface (login system is the example for this )#

root = customtkinter.CTk()
root.geometry("500x350")

def login():
    print ("P.M Manager Login")
    
    #Getting user information#
def get_user_info():
    print(name_entry1.get())
    print(password_entry2.get())

frame = customtkinter.CTkFrame(master=root)
frame.pack(pady = 20, padx = 10, fill="both", expand=True)

label = customtkinter.CTkLabel(master=frame, text="Denzel's Password Manager")
label.pack(pady = 12, padx = 10)

#username and password text enerty fields#
name_entry1 = customtkinter.CTkEntry(master = frame,placeholder_text = "username")
name_entry1.pack(pady = 12, padx = 10)
  
password_entry2 = customtkinter.CTkEntry(master = frame,placeholder_text ="password",show ="*")
password_entry2.pack(pady =12, padx = 10)

#username and password butons#
button1 = customtkinter.CTkButton(master = frame, text = "Login", command=get_user_info) #command line takes the get_user_info function
button1.pack(pady = 12, padx = 10)

checkbox1 = customtkinter.CTkCheckBox(master = frame, text = "Remember me")
checkbox1.pack(pady = 12, padx = 10)



class PasswordManager:
    #creating a password key and storing 
    def __init__(self,):
        self.key = None
        self.password_file = None #passwords file
        self.password_dict = {} #password dictionary, but it should be currently empty
        self.load_key() # Load the key if it exists

    def create_key(self):
        if self.key is None:
            self.key = Fernet.generate_key()
            with open(self.password_file, "wb") as f:
                f.write(self.key)

    def load_key(self): # Creates a new key of one doesn't exist
        try:
            with open(self.password_file, 'rb') as f:
                self.key = f.read()
        except FileNotFoundError:
            self.create_key()


    #Creating the password file
    def create_password_file(self, path, inital_values=None):
        self.password_file = path

        if inital_values is not None:
            for key, value in inital_values.items(): 
                self.add_password = (key, value)


    def load_password_file(self, path): #taking the password file from create_password_file
        self.password_file = path
        with open(path, "rb") as f:
            for line in f: 
                site, encrypted = line.split(";")
                set.password_dict[site] = Fernet(self.key).decrypt(encrypted.encode()) #loading the decrypted password into the password dictionary

    def add_password(self, site, password): #adding the password
        self.password_dict[site] = password

        if self.password_file is not None:
            with open(self.password_file, 'a+') as f:
                encrypted = Fernet(self.key).encrypt(password.encode()) #encrypted password into the password  
        f.write(site + ";" + encrypted + "\n")


    def get_password(self, site):
        return self.password_dict[site]

#Basic grpahic interface (login system is the example for this )#

root = customtkinter.CTk()
root.geometry("500x350")

def login():
    print ("P.M Manager Login")
    
    #Getting user information#
def get_user_info():
    print(name_entry1.get())
    print(password_entry2.get())

frame = customtkinter.CTkFrame(master=root)
frame.pack(pady = 20, padx = 10, fill="both", expand=True)

label = customtkinter.CTkLabel(master=frame, text="Denzel's Password Manager")
label.pack(pady = 12, padx = 10)

#username and password text enerty fields#
name_entry1 = customtkinter.CTkEntry(master = frame,placeholder_text = "username")
name_entry1.pack(pady = 12, padx = 10)
  
password_entry2 = customtkinter.CTkEntry(master = frame,placeholder_text ="password",show ="*")
password_entry2.pack(pady =12, padx = 10)

#username and password butons#
button1 = customtkinter.CTkButton(master = frame, text = "Login", command=get_user_info) #command line takes the get_user_info function
button1.pack(pady = 12, padx = 10)

checkbox1 = customtkinter.CTkCheckBox(master = frame, text = "Remember me")
checkbox1.pack(pady = 12, padx = 10)

root.mainloop()
